{"version":3,"sources":["components/Header.js","pages/HomePage.js","pages/FavoritesPage.js","pages/PetDetay.js","components/Main.js","components/Sidebar.js","constants.js","helpers.js","components/PetList.js","components/Pet.js","components/Filters.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","id","to","HomePage","props","filterPets","breed","age","setState","activeFilter","yetiskinolmadurumu","search","val","searchValue","state","document","title","onFilterPets","this","onSearch","React","Component","FavoritesPage","console","log","PetDetay","petbilgi","fetch","match","params","then","resp","json","data","class","style","marginLeft","height","src","image","color","fontWeight","name","description","Main","exact","path","component","Sidebar","breedOptions","stringContains","str","toLowerCase","indexOf","PetList","pets","_pets","filter","pet","filteredPet","handleScroll","e","element","target","scrollHeight","scrollTop","clientHeight","yukleniyor","rootApiURL","prevProps","Yukleniyor","EmptyPets","Pets","length","onscroll","slice","map","key","Math","random","Pet","alt","fontSize","Filters","classNames","onClick","preventDefault","Search","changeValue","value","type","onChange","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a26b871.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Pets</a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/\">HomePage</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/favoriler\">Favoriler</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Sidebar, PetList} from \"../components\";\r\n\r\nclass HomePage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            activeFilter: \"\",\r\n            searchValue: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home Page\";\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.title = \"Pets App\";\r\n    }\r\n\r\n    filterPets = (breed,age) => {\r\n        this.setState({\r\n            activeFilter: breed,\r\n            yetiskinolmadurumu:age,\r\n        });\r\n    }\r\n\r\n    search = (val) => {\r\n        this.setState({\r\n            searchValue: val\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3\">\r\n                            <Sidebar\r\n                                onFilterPets={this.filterPets}\r\n                                activeFilter={this.state.activeFilter}\r\n                                onSearch={this.search}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-9\">\r\n                            <PetList\r\n                                activeFilter={this.state.activeFilter}\r\n                                searchValue={this.state.searchValue}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\n\r\nclass FavoritesPage extends React.Component {\r\n        constructor(props){\r\n        super(props)\r\n            this.state={\r\n\r\n            }\r\n        }\r\n\r\n    render(){\r\n    return (\r\n        <div>\r\n            {console.log(this.props)}\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default FavoritesPage;\r\n","import React from 'react';\r\n\r\nclass PetDetay extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            petbilgi:[],\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n        fetch(`http://5dd7af92505c590014d3b4ac.mockapi.io/pets/${this.props.match.params.id}`)\r\n        .then((resp)=>resp.json())\r\n          .then((data) => {      \r\n            this.setState({ \r\n                petbilgi:data });\r\n          });\r\n      }\r\n\r\n    render(){\r\n    return(\r\n        <div class=\"container mt-5 h-100\">\r\n        <div class=\"card col-12 col-md-12 col-sm-12 h-100\" >\r\n        {console.log(this.state.petbilgi)}\r\n        <img class=\"card-img-top w-50 mt-5\" style={{marginLeft:\"250px\",height:\"300px\"}} src={this.state.petbilgi.image}></img>\r\n        <div class=\"card-body\">\r\n         <h5 class=\"card-title\" style={{color:\"green\",fontWeight:\"bolder\"}}>{this.state.petbilgi.name}</h5>\r\n         <p class=\"card-subtitle mb-2 text-muted \">{this.state.petbilgi.breed}</p>\r\n       <span class=\"card-subtitle mb-2 badge badge-pill badge-success\"><span class=\"badge badge-warning\">AGE=</span>{this.state.petbilgi.age}</span>\r\n       <p class=\"card-text\">{this.state.petbilgi.description}</p>\r\n       <button class=\"btn btn-success\"> Favorilere ekle</button>\r\n       \r\n        </div>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n\r\n    )\r\n    \r\n    }\r\n    \r\n}\r\n\r\n\r\n   \r\n\r\nexport default PetDetay;","import React from 'react';\r\nimport {Route, Switch} from \"react-router\";\r\nimport {FavoritesPage, HomePage,PetDetay} from \"../pages\";\r\n\r\nfunction Main(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={HomePage}/>\r\n                <Route exact path=\"/favoriler\" component={FavoritesPage}/>\r\n                <Route exact path=\"/detay/:id\" component={PetDetay}/>          \r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {Filters} from \"../components\";\r\nimport {Search} from \"../components\";\r\n\r\nfunction Sidebar(props) {\r\n    return (\r\n        <div>\r\n            <Search onSearch={props.onSearch} />\r\n            <Filters\r\n                onFilterPets={props.onFilterPets}\r\n                activeFilter={props.activeFilter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nconst rootApiURL = \"http://5dd7af92505c590014d3b4ac.mockapi.io/\";\r\n\r\nconst petsPath = \"pets\";\r\n\r\n\r\n\r\nexport const getPets = () => {\r\n    return fetch(rootApiURL + petsPath)\r\n        .then((resp) => resp.json())\r\n};\r\n\r\n\r\nexport const breedOptions = [\r\n    \"Cavalier King Charles Spaniel\",\r\n    \"Golden Retriever\",\r\n    \"Beagle\",\r\n    \"French Bulldog\"\r\n];\r\n\r\n","export const stringContains = (str, search) => {\r\n    return str.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n};","import React from 'react';\r\nimport {Pet} from \"../components\";\r\nimport {getPets} from \"../constants\";\r\nimport {stringContains} from \"../helpers\";\r\n\r\nclass PetList extends React.Component{\r\n    breed;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            _pets: [],\r\n            pets: [],\r\n            yukleniyor: true        \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getPets().then(data=> {\r\n            this.setState({\r\n                _pets: data,\r\n                pets: data,\r\n                yukleniyor: false\r\n            })\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.activeFilter !== this.props.activeFilter){\r\n            this.filterPets();\r\n        }\r\n        if(prevProps.searchValue !== this.props.searchValue){\r\n            this.filterPets();\r\n        }\r\n    }\r\n\r\n    filterPets = () => {\r\n        if(!this.props.activeFilter){\r\n            this.setState({\r\n                pets: this.state._pets.filter((pet) => {\r\n                    return stringContains(pet.name, this.props.searchValue)\r\n                })\r\n            });\r\n        }else{\r\n            this.setState({\r\n                pets: this.state._pets.filter((pet) => {\r\n                    return pet.breed === this.props.activeFilter;\r\n                }).filter((filteredPet) => {\r\n                    return stringContains(filteredPet.name, this.props.searchValue)\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleScroll = e => {\r\n        let element = e.target\r\n        if (element.scrollHeight - element.scrollTop === element.clientHeight) {\r\n            return(\r\n               <div></div>\r\n            )\r\n        }\r\n      }\r\n\r\n    render(){\r\n        const Yukleniyor = <div>Yukleniyor</div>;\r\n        const EmptyPets = <div>Bulunamadı</div>;\r\n        const Pets =  [<h3>Gösterilen Pet Sayısı: {this.state.pets.length}</h3>,\r\n        \r\n             <div className=\"row h-100\" onscroll={this.handleScroll}>\r\n            {\r\n                this.state.pets.slice(0,4).map((pet) => {\r\n                    return <Pet style={{height:\"100px\"}} key={Math.random()} {...pet} />\r\n                })\r\n                \r\n            }\r\n            </div>]\r\n           \r\n          if(this.state.yukleniyor){\r\n            return Yukleniyor;\r\n          }else if(this.state.pets.length === 0){\r\n            return EmptyPets\r\n        }else{\r\n            return Pets;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default PetList;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Pet(props) {\r\n    const {name, image, age, description, breed, id} = props\r\n    return (\r\n        <div className=\"col-lg-6 col-md-4 mb-4\">\r\n            <div className=\"card h-100\">\r\n                <Link className=\"nav-link\" to={`/detay/${id}`}><img className=\"card-img-top\" src={image} alt=\"\" style={{height: \"292px\"}}/></Link>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">      \r\n                <Link className=\"nav-link\" to={`/detay/${id}`}> {name} </Link>                          \r\n                        <div>\r\n                            <span className=\"badge badge-primary\" style={{fontSize: \"12px\"}}>{breed}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"badge badge-warning\" style={{fontSize: \"12px\"}}>{age}</span>\r\n                        </div>\r\n                    </h4>\r\n                    <p className=\"card-text\">\r\n                        {description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <div className=\"btn btn-success\">Favorilere Ekle</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pet;\r\n","import React from 'react';\r\nimport {breedOptions} from \"../constants\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction Filters(props) {\r\n    console.log(props.activeFilter);\r\n    return (\r\n        <div>\r\n            <h4 className=\"my-4 text-left\">Cins</h4>\r\n            <ul>\r\n                <li className={\r\n                    classNames({\r\n                        \"list-group-item\": true,\r\n                        \"active\": !props.activeFilter,\r\n                    })\r\n                } onClick={() => {\r\n                    props.onFilterPets(\"\");\r\n                }}>Hepsi</li>\r\n                {\r\n                    breedOptions.map((breed) => {\r\n                        return <li\r\n                            key={breed}\r\n                            className={classNames({\r\n                                \"list-group-item\": true,\r\n                                \"active\": breed === props.activeFilter\r\n                                }\r\n                            )}\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                props.onFilterPets(breed);\r\n                            }}>{breed}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\n\r\nclass Search extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n    }\r\n\r\n    changeValue = (e) => {\r\n        const val = e.target.value;\r\n        this.setState({\r\n            value: val\r\n        }, () => {\r\n            this.props.onSearch(val);\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h4>Arama</h4>\r\n                <input type=\"text\"\r\n                       value={this.state.value}\r\n                       onChange={this.changeValue}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Header, Main} from \"./components\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}